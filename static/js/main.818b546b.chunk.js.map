{"version":3,"sources":["components/Wind.js","components/Day.js","components/General.js","components/DayLogics.js","components/GeneralLogics.js","components/UI.js","Weather.js","components/CityInput.js","components/WeatherWidget.js","App.js","index.js"],"names":["Wind","props","dir","className","speed","Day","style","day","weather","location","localtime","name","current","wind_dir","wind_kph","src","condition","icon","alt","text","temp_c","General","feelslike_c","humidity","pressure_mb","forecast","forecastday","maxtemp_c","days","DayLogics","setStyle","setDay","children","conditions","code","format","Date","time","substr","length","useEffect","GeneralLogics","setForecast","d","day1","d2","setDate","getDate","day2","d3","day3","UI","useState","forecastDays","setForecastDays","Weather","validation","CityInput","inputValue","setInputValue","onSubmit","e","preventDefault","onUserInput","htmlFor","id","value","onChange","target","WeatherWidget","App","userInputCity","setUserInputCity","setWeather","validationMessage","setValidationMessage","fetch","then","res","json","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.818b546b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { BsArrowDownRight, BsArrowDownLeft, BsArrowDown, BsArrowLeft, BsArrowRight, BsArrowUpLeft, BsArrowUpRight, BsArrowUp } from 'react-icons/bs';\r\nimport { WiCloudyWindy } from 'react-icons/wi'\r\n\r\n\r\nconst Wind = (props) => {\r\n    switch (props.dir) {\r\n        case 'N':\r\n        case 'NNE':\r\n            return (<div className='arrow'><BsArrowDown />{props.speed} km/h</div>);\r\n        case 'NE':\r\n        case 'ENE':\r\n            return (<div className='arrow'><BsArrowDownLeft />{props.speed} km/h</div>);\r\n        case 'NW':\r\n        case 'NNW':\r\n            return (<div className='arrow'><BsArrowDownRight />{props.speed} km/h</div>);\r\n        case 'E':\r\n        case 'ESE':\r\n            return (<div className='arrow'><BsArrowLeft />{props.speed} km/h</div>);\r\n        case 'W':\r\n        case 'WNW':\r\n            return (<div className='arrow'><BsArrowRight />{props.speed} km/h</div>);\r\n        case 'SE':\r\n        case 'SSE':\r\n            return (<div className='arrow'><BsArrowUpLeft />{props.speed} km/h</div>);\r\n        case 'SW':\r\n        case 'WSW':\r\n            return (<div className='arrow'><BsArrowUpRight />{props.speed} km/h</div>);\r\n        case 'S':\r\n        case 'SSW':\r\n            return (<div className='arrow'><BsArrowUp />{props.speed} km/h</div>);\r\n        default:\r\n            return (<div className='arrow'><WiCloudyWindy />{props.speed} km/h</div>)\r\n    }\r\n}\r\n\r\nexport default Wind\r\n","import React from 'react'\r\nimport { GoLocation } from 'react-icons/go'\r\nimport Wind from './Wind';\r\n\r\nconst Day = (props) => {\r\n    return (\r\n        <div className={`day widget ${props.style}`}>\r\n            <div className='weekDay'>\r\n                {props.day}\r\n            </div>\r\n            <div className='localTime'>\r\n                As for {props.weather.location.localtime} local time.\r\n            </div>\r\n            <div className='city'>\r\n                <GoLocation />{props.weather.location.name}\r\n            </div>\r\n            <div className='wind'>\r\n                <Wind dir={props.weather.current.wind_dir} speed={props.weather.current.wind_kph} />\r\n            </div>\r\n            <div className='conditions'>\r\n                <div className='icon'>\r\n                    <img src={`http:${props.weather.current.condition.icon}`} alt={props.weather.current.condition.text} className='image' />\r\n                </div>\r\n                <div className='temperature'>\r\n                    {props.weather.current.temp_c}째C\r\n                </div>\r\n                <div className='description'>\r\n                    {props.weather.current.condition.text}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Day\r\n","const General = (props) => {\r\n    return (\r\n        <div className='general widget'>\r\n            <div className='feelslike'>Feels like: {props.weather.current.feelslike_c}째C</div>\r\n            <div className='humidity'>Humidity: {props.weather.current.humidity}%</div>\r\n            <div className='pressure'>Pressure: {props.weather.current.pressure_mb} hPa</div>\r\n            <div className='followingdays'>\r\n                <div className='dayoverview'>\r\n                    <div className='dayname'>Today</div>\r\n                    <img src={`https:${props.weather.forecast.forecastday[0].day.condition.icon}`} alt={`{props.weather.forecast.forecastday[0].day.condition.icon}`}></img>\r\n                    {props.weather.forecast.forecastday[0].day.maxtemp_c} 째C\r\n                </div>\r\n                <div className='dayoverview'>\r\n                    <div className='dayname'>{props.days[1]}</div>\r\n                    <img src={`https:${props.weather.forecast.forecastday[1].day.condition.icon}`} alt={`{props.weather.forecast.forecastday[1].day.condition.icon}`}></img>\r\n                    {props.weather.forecast.forecastday[1].day.maxtemp_c} 째C\r\n                </div>\r\n                <div className='dayoverview'>\r\n                    <div className='dayname'>{props.days[2]}</div>\r\n                    <img src={`https:${props.weather.forecast.forecastday[2].day.condition.icon}`} alt={`{props.weather.forecast.forecastday[2].day.condition.icon}`}></img>\r\n                    {props.weather.forecast.forecastday[2].day.maxtemp_c} 째C\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default General\r\n","import React, { useEffect } from 'react';\r\nimport format from 'date-fns/format';\r\n\r\nconst DayLogics = ({ setStyle, setDay, weather, children }) => {\r\n    const conditions = weather.current.condition.code;\r\n    const day = format(new Date(weather.location.localtime), 'EEEE');\r\n\r\n    const prefix = '//cdn.weatherapi.com/weather/64x64/';\r\n    const s = weather.current.condition.icon;\r\n    const time = s.substr(prefix.length);\r\n\r\n    useEffect(() => {\r\n        if (time === 'day') {\r\n            switch (conditions) {\r\n                case 1000:\r\n                    setStyle('clearday');\r\n                    break;\r\n                case 1003:\r\n                case 1006:\r\n                    setStyle('cloudday');\r\n                    break;\r\n                case 1009:\r\n                case 1030:\r\n                    setStyle('heavycloudday');\r\n                    break;\r\n                default:\r\n                    setStyle('elseday');\r\n                    break;\r\n            }\r\n        } else {\r\n            switch (conditions) {\r\n                case 1000:\r\n                    setStyle('clearnight');\r\n                    break;\r\n                case 1003:\r\n                case 1006:\r\n                    setStyle('cloudnight');\r\n                    break;\r\n                case 1009:\r\n                case 1030:\r\n                    setStyle('heavycloudnight');\r\n                    break;\r\n                default:\r\n                    setStyle('elsenight');\r\n                    break;\r\n            }\r\n        }\r\n        setDay(day)\r\n    }, [conditions, setStyle, day, setDay, time])\r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DayLogics\r\n","import React, { useEffect } from 'react'\r\nimport format from 'date-fns/format';\r\n\r\n\r\nconst GeneralLogics = ({ weather, setForecast, children }) => {\r\n    useEffect(() => {\r\n        let d = new Date(weather.location.localtime);\r\n        const day1 = format(d, 'EEEE');\r\n        const d2 = d.setDate(d.getDate() + 1);\r\n        const day2 = format(d2, 'EEEE');\r\n        const d3 = d.setDate(d.getDate() + 1);\r\n        const day3 = format(d3, 'EEEE');\r\n        setForecast([day1, day2, day3])\r\n    }, [weather.location.localtime, setForecast])\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeneralLogics\r\n","import React, { useState } from 'react';\r\nimport Day from './Day';\r\nimport General from './General';\r\nimport DayLogics from './DayLogics'\r\nimport GeneralLogics from './GeneralLogics'\r\n\r\nconst UI = (props) => {\r\n    const [style, setStyle] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [forecastDays, setForecastDays] = useState([]);\r\n    return (\r\n        <div className='container' >\r\n            <DayLogics weather={props.weather} setStyle={setStyle} setDay={setDay} >\r\n                <Day weather={props.weather} style={style} day={day} />\r\n            </DayLogics>\r\n            <GeneralLogics weather={props.weather} setForecast={setForecastDays}>\r\n                <General weather={props.weather} days={forecastDays} />\r\n            </GeneralLogics>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UI\r\n","import React from 'react';\r\nimport UI from './components/UI'\r\n\r\n\r\nconst Weather = ({ validation, weather }) => {\r\n    if (weather) {\r\n        return <UI weather={weather} />\r\n    } else {\r\n        if (!validation) {\r\n            return <span>Please wait</span>\r\n        } else {\r\n            return <></>\r\n        }\r\n    }\r\n}\r\nexport default Weather\r\n","import React, { useState } from 'react'\r\n\r\nconst CityInput = (props) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.onUserInput(inputValue);\r\n        setInputValue('')\r\n    }\r\n\r\n    return (\r\n        <div className='init'>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor='city'>Enter the city:</label>\r\n                <input id='city' value={inputValue} onChange={handleChange} />\r\n                <button>Enter</button><br />\r\n                <div className='validation'>\r\n                    {props.validation}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CityInput\r\n","import React from 'react'\r\n\r\nconst WeatherWidget = (props) => {\r\n\r\n    return (\r\n        <>\r\n            {props.children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherWidget\r\n","import React, { useState, useEffect } from 'react';\r\nimport Weather from './Weather';\r\nimport CityInput from './components/CityInput'\r\nimport WeatherWidget from './components/WeatherWidget'\r\n\r\nconst App = () => {\r\n    const apiKey = 'b16976b473b64c6ca13200250210411'\r\n    const [userInputCity, setUserInputCity] = useState('');\r\n    const [weather, setWeather] = useState(null);\r\n    const [validationMessage, setValidationMessage] = useState(null);\r\n    useEffect(() => {\r\n        if (userInputCity) {\r\n            fetch(`https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${userInputCity}&days=3`)\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    if (json.current) {\r\n                        setWeather(json);\r\n                        setValidationMessage(null);\r\n                        console.log(json)\r\n                    } else {\r\n                        setValidationMessage('Invalid city')\r\n                    }\r\n                })\r\n        }\r\n    }, [userInputCity])\r\n    return (\r\n        <WeatherWidget>\r\n            <CityInput onUserInput={setUserInputCity} validation={validationMessage} />\r\n            {userInputCity && <Weather weather={weather} validation={validationMessage} />}\r\n        </WeatherWidget>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}